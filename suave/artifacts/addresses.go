// Code generated by suave/gen. DO NOT EDIT.
// Hash: b64e846cff08436968d3729e5089943e78905e169a168581f4033c0498c485a1
package artifacts

import (
	"github.com/ethereum/go-ethereum/common"
)

// List of suave precompile addresses
var (
	buildEthBlockAddr            = common.HexToAddress("0x0000000000000000000000000000000042100001")
	confidentialInputsAddr       = common.HexToAddress("0x0000000000000000000000000000000042010001")
	confidentialRetrieveAddr     = common.HexToAddress("0x0000000000000000000000000000000042020001")
	confidentialStoreAddr        = common.HexToAddress("0x0000000000000000000000000000000042020000")
	ethcallAddr                  = common.HexToAddress("0x0000000000000000000000000000000042100003")
	extractHintAddr              = common.HexToAddress("0x0000000000000000000000000000000042100037")
	fetchBidsAddr                = common.HexToAddress("0x0000000000000000000000000000000042030001")
	fillMevShareBundleAddr       = common.HexToAddress("0x0000000000000000000000000000000043200001")
	newBidAddr                   = common.HexToAddress("0x0000000000000000000000000000000042030000")
	p256VerifyAddr               = common.HexToAddress("0x0000000000000000000000000000000044000001")
	signEthTransactionAddr       = common.HexToAddress("0x0000000000000000000000000000000040100001")
	simulateBundleAddr           = common.HexToAddress("0x0000000000000000000000000000000042100000")
	submitBundleJsonRPCAddr      = common.HexToAddress("0x0000000000000000000000000000000043000001")
	submitEthBlockBidToRelayAddr = common.HexToAddress("0x0000000000000000000000000000000042100002")
)

var SuaveMethods = map[string]common.Address{
	"buildEthBlock":            buildEthBlockAddr,
	"confidentialInputs":       confidentialInputsAddr,
	"confidentialRetrieve":     confidentialRetrieveAddr,
	"confidentialStore":        confidentialStoreAddr,
	"ethcall":                  ethcallAddr,
	"extractHint":              extractHintAddr,
	"fetchBids":                fetchBidsAddr,
	"fillMevShareBundle":       fillMevShareBundleAddr,
	"newBid":                   newBidAddr,
	"p256Verify":               p256VerifyAddr,
	"signEthTransaction":       signEthTransactionAddr,
	"simulateBundle":           simulateBundleAddr,
	"submitBundleJsonRPC":      submitBundleJsonRPCAddr,
	"submitEthBlockBidToRelay": submitEthBlockBidToRelayAddr,
}

func PrecompileAddressToName(addr common.Address) string {
	switch addr {
	case buildEthBlockAddr:
		return "buildEthBlock"
	case confidentialInputsAddr:
		return "confidentialInputs"
	case confidentialRetrieveAddr:
		return "confidentialRetrieve"
	case confidentialStoreAddr:
		return "confidentialStore"
	case ethcallAddr:
		return "ethcall"
	case extractHintAddr:
		return "extractHint"
	case fetchBidsAddr:
		return "fetchBids"
	case fillMevShareBundleAddr:
		return "fillMevShareBundle"
	case newBidAddr:
		return "newBid"
	case p256VerifyAddr:
		return "p256Verify"
	case signEthTransactionAddr:
		return "signEthTransaction"
	case simulateBundleAddr:
		return "simulateBundle"
	case submitBundleJsonRPCAddr:
		return "submitBundleJsonRPC"
	case submitEthBlockBidToRelayAddr:
		return "submitEthBlockBidToRelay"
	}
	return ""
}
